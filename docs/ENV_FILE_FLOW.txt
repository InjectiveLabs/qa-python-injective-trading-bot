
╔═══════════════════════════════════════════════════════════════════════════════╗
║                   .env FILE FLOW IN DOCKER DEPLOYMENT                         ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│ 1️⃣  .env FILE ON SERVER (devnet-2)                                          │
│                                                                               │
│   Location: /root/injective/injective-testnet-liquidity-bot/.env             │
│   Permissions: -rw------- (600) - ONLY root can read                         │
│                                                                               │
│   Contents:                                                                   │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ # Dashboard Auth                                                       │ │
│   │ WEB_AUTH_USERNAME=admin                                                │ │
│   │ WEB_AUTH_PASSWORD=secure123                                            │ │
│   │                                                                         │ │
│   │ # Wallet 1                                                             │ │
│   │ WALLET_1_PRIVATE_KEY=0xabc123...                                       │ │
│   │ WALLET_1_NAME=Primary Market Maker                                     │ │
│   │ WALLET_1_ENABLED=true                                                  │ │
│   │                                                                         │ │
│   │ # Wallet 2                                                             │ │
│   │ WALLET_2_PRIVATE_KEY=0xdef456...                                       │ │
│   │ WALLET_2_NAME=Secondary Market Maker                                   │ │
│   │ WALLET_2_ENABLED=true                                                  │ │
│   │                                                                         │ │
│   │ # Wallet 3                                                             │ │
│   │ WALLET_3_PRIVATE_KEY=0xghi789...                                       │ │
│   │ WALLET_3_NAME=Tertiary Market Maker                                    │ │
│   │ WALLET_3_ENABLED=true                                                  │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│   ⚠️  NEVER COMMITTED TO GIT (.gitignore protects it)                        │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      │ docker compose reads .env
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│ 2️⃣  DOCKER COMPOSE (docker-compose.yml)                                     │
│                                                                               │
│   services:                                                                   │
│     web:                                                                      │
│       env_file:                                                               │
│         - .env  ◄─── Loads ALL environment variables                         │
│       environment:                                                            │
│         - DASHBOARD_USERNAME=${DASHBOARD_USERNAME}                            │
│         - DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}                            │
│                                                                               │
│   Result: Web container has access to ALL environment variables               │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      │ Container starts
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│ 3️⃣  WEB DASHBOARD CONTAINER                                                 │
│                                                                               │
│   Container: trading-bot-web                                                 │
│   Image: qa-python-injective-trading-bot-web:latest                          │
│                                                                               │
│   Environment Variables Available:                                            │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ WEB_AUTH_USERNAME=admin                                                │ │
│   │ WEB_AUTH_PASSWORD=secure123                                            │ │
│   │ WALLET_1_PRIVATE_KEY=0xabc123...                                       │ │
│   │ WALLET_1_NAME=Primary Market Maker                                     │ │
│   │ WALLET_1_ENABLED=true                                                  │ │
│   │ WALLET_2_PRIVATE_KEY=0xdef456...                                       │ │
│   │ WALLET_2_NAME=Secondary Market Maker                                   │ │
│   │ WALLET_2_ENABLED=true                                                  │ │
│   │ WALLET_3_PRIVATE_KEY=0xghi789...                                       │ │
│   │ WALLET_3_NAME=Tertiary Market Maker                                    │ │
│   │ WALLET_3_ENABLED=true                                                  │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│   Process:                                                                    │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ 1. web/app.py starts                                                   │ │
│   │ 2. load_wallets_from_env() reads ALL WALLET_*_PRIVATE_KEY vars        │ │
│   │ 3. Creates wallet dictionary with all 3 wallets                        │ │
│   │ 4. Displays wallets in UI for user to choose                           │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      │ User starts bot via UI
                                      │ (e.g., "Start Wallet 2 for INJ/USDT")
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│ 4️⃣  WEB DASHBOARD CREATES BOT CONTAINER                                     │
│                                                                               │
│   Python Code (web/app.py):                                                  │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ container = docker_client.containers.run(                              │ │
│   │     image="qa-python-injective-trading-bot-spot-trader:latest",        │ │
│   │     name="spot-bot-wallet_2-INJ-USDT",                                 │ │
│   │     environment={                                                       │ │
│   │         "WALLET_ID": "wallet_2",                                        │ │
│   │         "MARKET": "INJ/USDT",                                           │ │
│   │         # ⚠️  ONLY passes Wallet 2's key, NOT all keys!                │ │
│   │         "WALLET_2_PRIVATE_KEY": "0xdef456...",                          │ │
│   │         "WALLET_2_NAME": "Secondary Market Maker",                      │ │
│   │         "WALLET_2_ENABLED": "true",                                     │ │
│   │     },                                                                  │ │
│   │     network="trading-network",                                          │ │
│   │     volumes={                                                           │ │
│   │         "./logs": "/app/logs",                                          │ │
│   │         "./config": "/app/config:ro",                                   │ │
│   │     },                                                                  │ │
│   │     detach=True                                                         │ │
│   │ )                                                                       │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│   🔒 Security: Only the specific wallet's key is passed!                     │
└─────────────────────────────────────────────────────────────────────────────┘
                                      │
                                      │ Container created
                                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│ 5️⃣  SPOT TRADER BOT CONTAINER                                               │
│                                                                               │
│   Container: spot-bot-wallet_2-INJ-USDT                                      │
│   Image: qa-python-injective-trading-bot-spot-trader:latest                  │
│                                                                               │
│   Environment Variables Available (ONLY for this wallet):                    │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ WALLET_ID=wallet_2                                                     │ │
│   │ MARKET=INJ/USDT                                                        │ │
│   │ WALLET_2_PRIVATE_KEY=0xdef456...  ◄── ONLY this wallet's key          │ │
│   │ WALLET_2_NAME=Secondary Market Maker                                   │ │
│   │ WALLET_2_ENABLED=true                                                  │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│   ❌ Does NOT have:                                                           │
│      - WALLET_1_PRIVATE_KEY                                                   │
│      - WALLET_3_PRIVATE_KEY                                                   │
│      - WEB_AUTH_PASSWORD                                                      │
│                                                                               │
│   Process:                                                                    │
│   ┌───────────────────────────────────────────────────────────────────────┐ │
│   │ 1. spot_trader.py starts with args: wallet_2 INJ/USDT                 │ │
│   │ 2. Reads WALLET_2_PRIVATE_KEY from environment                         │ │
│   │ 3. Connects to Injective network                                       │ │
│   │ 4. Signs transactions with wallet 2's private key                      │ │
│   │ 5. Places orders, monitors market                                      │ │
│   │ 6. Writes logs to /app/logs/spot_wallet_2_INJ-USDT.log                │ │
│   └───────────────────────────────────────────────────────────────────────┘ │
│                                                                               │
│   🔒 Security: Isolated - if compromised, only 1 wallet affected             │
└─────────────────────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════
                              🔐 SECURITY SUMMARY
═══════════════════════════════════════════════════════════════════════════════

✅ SECURE:
   1. .env file NEVER in git (protected by .gitignore)
   2. .env file permissions: 600 (only root can read)
   3. Web dashboard: Has all keys (needs them to start bots)
   4. Bot containers: Only have THEIR OWN key (isolation)
   5. If bot container compromised: Only 1 wallet at risk

❌ NEVER DO:
   1. Commit .env to git
   2. Share .env file via Slack/email/screenshot
   3. Use same password across environments
   4. Store private keys in code or config files


═══════════════════════════════════════════════════════════════════════════════
                           📊 EXAMPLE SCENARIO
═══════════════════════════════════════════════════════════════════════════════

You have 3 wallets in .env:
   • Wallet 1: Primary Market Maker
   • Wallet 2: Secondary Market Maker  
   • Wallet 3: Tertiary Market Maker

User starts 2 bots via dashboard:
   1. Wallet 1 → INJ/USDT (Spot)
   2. Wallet 2 → INJ-PERP (Derivative)

Result:
   ┌──────────────────────────────────────────────────────────────────────┐
   │ Container: trading-bot-web                                            │
   │ Has: ALL 3 private keys                                               │
   │ Purpose: Manage bot lifecycle, display UI                             │
   └──────────────────────────────────────────────────────────────────────┘
                    │                            │
            ┌───────┴───────┐           ┌────────┴────────┐
            ▼               ▼           ▼                 ▼
   ┌─────────────────┐  ┌────────────────────────────┐
   │ spot-bot-       │  │ derivative-bot-            │
   │ wallet_1-INJ... │  │ wallet_2-INJ-PERP          │
   │                 │  │                            │
   │ Has: ONLY       │  │ Has: ONLY                  │
   │ Wallet 1 key    │  │ Wallet 2 key               │
   └─────────────────┘  └────────────────────────────┘

   Wallet 3 key: Not used (stays secure in web dashboard)


═══════════════════════════════════════════════════════════════════════════════
                         🎯 DEPLOYMENT CHECKLIST
═══════════════════════════════════════════════════════════════════════════════

On devnet-2 server:

 [ ] 1. SSH to server: ssh root@injective-devnet-2
 [ ] 2. Navigate: cd /root/injective/injective-testnet-liquidity-bot
 [ ] 3. Create .env: cp env.example .env
 [ ] 4. Edit .env: nano .env (add real private keys)
 [ ] 5. Set permissions: chmod 600 .env
 [ ] 6. Verify: ls -la .env (should show -rw-------)
 [ ] 7. Verify not in git: git status (should NOT show .env)
 [ ] 8. Build images: ./build-images.sh
 [ ] 9. Start dashboard: docker compose up -d web
 [ ] 10. Check logs: docker compose logs web | grep "Loaded wallet"
 [ ] 11. Access UI: curl http://localhost:8000 (or public IP)
 [ ] 12. Start a test bot via UI
 [ ] 13. Verify bot running: docker ps | grep bot


